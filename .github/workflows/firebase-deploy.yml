name: Deploy to Firebase Functions
on:
  push:
    branches:
      - master
jobs:

  config:
    name: Configuration
    runs-on: ubuntu-latest
    steps:

      - name: ✅ Checkout branch
        uses: actions/checkout@v3
      
      - name: 🤖 Use Node.js
        id: setup-node
        uses: actions/setup-node@v1
        with:
          node-version: 16.14.2
          cache: npm
          
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # 👆 caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache functions node modules
        id: cache-npm-functions
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # 👆 caching node_modules
          path: functions/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-


  testing:
    name: Testing project
    needs: [ config ]
    runs-on: ubuntu-latest
    steps:

      - name: 🧨 Install NPM dependencies
        if:
          steps.cache-npm.outputs.cache-hit != 'true'
          # 👆 if cache hits the skip this step.
        run: npm ci

      - name: 💫 Run unit testing
        run: npm run test

  build:
    name: Build project
    needs: [ config, testing ]
    runs-on: ubuntu-latest
    steps:

      - name: 🧨 Install NPM dependencies
        if:
          steps.cache-npm.outputs.cache-hit != 'true'
          # 👆 if cache hits the skip this step.
        run: npm ci

      - name: 💥 Build project
        run: npm run build

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: functions
          path: |
            functions/
            firebase.json

  deploy:
    name: Deploy to Firebase
    needs: [ config, testing, build ]
    runs-on: ubuntu-latest
    steps:

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: functions

      - name: Install dependencies in functions
        if:
          steps.cache-npm-functions.outputs.cache-hit != 'true'
          # 👆 if cache hits the skip this step.
        run: cd functions && npm ci

      - name: 🔥Install Firebase tools
        if:
          steps.setup-node.outputs.cache-hit != 'true'
          #👆 if cache hits the skip this step.
        run: npm install -g firebase-tools

      - id: auth
        name: 📝 Create firebase.sdk.key.json file
        uses: google-github-actions/auth@v0.8.0
        with:
          credentials_json: ${{ secrets.FIREBASE_SDK_KEY }}

      - name: Use project id
        run: firebase use ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: 🚀 Deploy to Firebase
        run: firebase deploy --debug --only functions