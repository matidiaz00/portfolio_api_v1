name: 'ðŸ§³ Build'

on: 
  workflow_call:
    inputs:
      server:
        required: true
        type: boolean
      browser:
        required: true
        type: boolean
    secrets:
      sdk_client_key:
        required: true
      sdk_key:
        required: true

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      
      - name: âœ… Checkout branch
        uses: actions/checkout@v3
      
      - name: ðŸ¤– Use Node.js
        id: setup-node
        uses: actions/setup-node@v1
        with:
          node-version: 16.14.2
          cache: npm

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: ðŸ§¨ Install NPM dependencies
        if: steps.cache-npm.outputs.cache-hit != true
        run: npm ci

      - name: Create firebase.sdk.client.key.json file
        if: inputs.server == true
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "firebase.sdk.client.key.json"
          json: ${{ secrets.sdk_client_key }}
          dir: 'src'

      - name: Create firebase.sdk.key.json file
        if: inputs.server == true
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "firebase.sdk.client.key.json"
          json: ${{ secrets.sdk_key }}
          dir: 'src'

      - name: ðŸ’¥ Build project
        if: inputs.server == true
        run: npm run clean && npm run build

      - name: Archive Production Artifact
        if: inputs.server == true
        uses: actions/upload-artifact@master
        with:
          name: functions
          path: |
            functions/
            firestore.rules
            firebase.json

      - name: ðŸ’¥ Build project
        if: inputs.browser == true
        run: |
          npx ts-node -O '{\"module\": \"commonjs\"}' ./src/environment/environment.config.ts
          npx @angular/cli build --configuration production

      - name: Archive Production Artifact
        if: inputs.browser == true
        uses: actions/upload-artifact@master
        with:
          name: browser
          path: dist