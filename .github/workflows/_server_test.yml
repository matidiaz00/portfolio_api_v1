name: '🧳 Unit and E2E Test'

on: 
  workflow_call:

jobs:
  build:
    name: Unit and E2E Test project
    runs-on: ubuntu-latest
    steps:
      
      - name: ✅ Checkout branch
        uses: actions/checkout@v3
      
      - name: 🤖 Use Node.js
        id: setup-node
        uses: actions/setup-node@v1
        with:
          node-version: 16.14.2
          cache: npm

      - name: Install Java for Firebase emulators
        run: sudo apt-get update && sudo apt-get install -y openjdk-8-jdk

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: 🧨 Install NPM dependencies
        if: steps.cache-npm.outputs.cache-hit != true
        run: npm ci

      - name: Create firebase.sdk.client.key.json file
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "firebase.sdk.client.key.json"
          json: ${{ secrets.FIREBASE_SDK_CLIENT_KEY }}
          dir: 'src/'

      - name: Create firebase.sdk.key.json file
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "firebase.sdk.key.json"
          json: ${{ secrets.FIREBASE_SDK_KEY }}
          dir: 'src/'

      - name: Create main .env file
        run: |
          touch functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}
          echo PROD="false" >> functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}
          echo API_URL=${{ secrets.API_URL }} >> functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}
          echo LINKEDIN_ACCESS_TOKEN=${{ secrets.LINKEDIN_ACCESS_TOKEN }} >> functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}
          echo NUBELA_ACCESS_TOKEN=${{ secrets.NUBELA_ACCESS_TOKEN }} >> functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}
          echo LINKEDIN_USER=${{ secrets.LINKEDIN_USER }} >> functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}
          echo ALOWED_ORIGINS=${{ secrets.ALOWED_ORIGINS }} >> functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}
          echo USER=${{ secrets.USER }} >> functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Create e2e .env file
        run: |
          touch e2e/.env
          echo API_URL=${{ secrets.API_URL }} >> functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}
          echo USER=${{ secrets.USER }} >> functions/.env.${{ secrets.FIREBASE_PROJECT_ID }}
      
      - id: auth
        name: 📝 Create firebase.sdk.key.json file
        uses: google-github-actions/auth@v0.8.0
        with:
          credentials_json: ${{ secrets.FIREBASE_SDK_KEY }}

      - name: 💫 Run Unit testing
        run: |
          npx firebase use ${{ secrets.FIREBASE_PROJECT_ID }}
          npm run test

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: coverage_report
          path: hosting/coverage/icov-report

      - name: 💫 Run Unit testing
        run: npm run test:e2e

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: e2e_report
          path: hosting/e2e_report