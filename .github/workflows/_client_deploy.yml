name: 'üß≥ Deploy'

on: 
  workflow_call:

jobs:
  build:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    steps:

      - name: ‚úÖ Checkout branch
        uses: actions/checkout@v3

      - name: Download Artifact
        env:
          FIREBASE_TARGET_NAME: ${{ secrets.FIREBASE_TARGET_NAME != '' }}
        if: env.FIREBASE_TARGET_NAME == true
        uses: actions/download-artifact@master
        with:
          name: browser

      - name: Download Artifact
        env:
          FIREBASE_COVERAGE_TARGET_NAME: ${{ secrets.FIREBASE_COVERAGE_TARGET_NAME != '' }}
        if: env.FIREBASE_COVERAGE_TARGET_NAME == true
        uses: actions/download-artifact@master
        with:
          name: coverage

      - name: üìù Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.FIREBASE_SDK_KEY }}

      - name: Assign project ID to Firebase config
        run: npx firebase-tools use ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Assign target to Firebase Hosting Multisite config
        env:
          FIREBASE_TARGET_NAME: ${{ secrets.FIREBASE_TARGET_NAME != '' }}
        if: env.FIREBASE_TARGET_NAME == true
        run: npx firebase-tools target:apply hosting browser ${{ secrets.FIREBASE_TARGET_NAME }}

      - name: Assign target to Firebase Hosting Multisite config
        env:
          FIREBASE_COVERAGE_TARGET_NAME: ${{ secrets.FIREBASE_COVERAGE_TARGET_NAME != '' }}
        if: env.FIREBASE_COVERAGE_TARGET_NAME == true
        run: npx firebase-tools target:apply hosting coverage ${{ secrets.FIREBASE_COVERAGE_TARGET_NAME }}

      - name: üöÄ Deploy to Firebase
        run: npx firebase-tools deploy

      - name: Display URLs
        run: |
          echo Server Api: https://google.com/
          echo Server Documentation: https://google.com/
          echo Server Coverage: https://google.com/
          echo Browser: https://google.com/
          echo Browser Coverage: https://google.com/