name: 'üß≥ Deploy'

on: 
  workflow_call:
    inputs:
      functions:
        required: true
        type: boolean
    secrets:
      sdk_key:
        required: true
      project_id:
        required: true
      browser_target:
        required: false
      documentation_target:
        required: false
      browser_coverage_target:
        required: false
      server_coverage_target:
        required: false

jobs:
  build:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    steps:

      - name: ‚úÖ Checkout branch
        uses: actions/checkout@v3

      - name: Download Artifact
        if: on.workflow_call.secrets.browser_target
        uses: actions/download-artifact@master
        with:
          name: browser

      - name: Download Artifact
        if: secrets.documentation_target
        uses: actions/download-artifact@master
        with:
          name: documentation

      - name: Download Artifact
        if: secrets.browser_coverage_target
        uses: actions/download-artifact@master
        with:
          name: coverage_browser

      - name: Download Artifact
        if: secrets.server_coverage_target
        uses: actions/download-artifact@master
        with:
          name: coverage_server

      - name: Download Artifact
        if: inputs.functions == 'true'
        uses: actions/download-artifact@master
        with:
          name: functions

      - name: Cache functions node modules
        if: inputs.functions == 'true'
        id: cache-npm-functions
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies in functions
        if: steps.cache-npm-functions.outputs.cache-hit != 'true' && on.workflow_call.inputs.functions == 'true'
        run: cd functions && npm ci

      - id: auth
        name: üìù Create firebase.sdk.key.json file
        uses: google-github-actions/auth@v0.8.0
        with:
          credentials_json: ${{ secrets.sdk_key }}

      - name: Assign project ID to Firebase config
        run: npx firebase-tools use ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Assign target to Firebase Hosting Multisite config
        if: secrets.browser_target
        run: npx firebase-tools target:apply hosting browser ${{ secrets.browser_target }}

      - name: Assign target to Firebase Hosting Multisite config
        if: secrets.documentation_target
        run: npx firebase-tools target:apply hosting documentation ${{ secrets.documentation_target }}

      - name: Assign target to Firebase Hosting Multisite config
        if: secrets.browser_coverage_target
        run: npx firebase-tools target:apply hosting coverage_browser ${{ secrets.browser_coverage_target }}
      
      - name: Assign target to Firebase Hosting Multisite config
        if: secrets.server_coverage_target
        run: npx firebase-tools target:apply hosting coverage_server ${{ secrets.server_coverage_target }}

      - name: üöÄ Deploy to Firebase
        run: npx firebase-tools deploy

      - name: Display URLs
        run: |
          echo Server Api: https://google.com/
          echo Server Documentation: https://google.com/
          echo Server Coverage: https://google.com/
          echo Browser: https://google.com/
          echo Browser Coverage: https://google.com/